#!../output/nlc --eval

:File ::= :Pointer;

fopen(filename:String, modes:String):File ::= :Pointer("fopen(filename:StrChar, modes:StrChar):File");;
fopen64(filename:String, modes:String):File ::= :Pointer("fopen(filename:StrChar, modes:StrChar):File");;

freopen(filename:String, modes:String):File ::= :Pointer("freopen(filename:StrChar, modes:StrChar, stream:File):File");;
fclose(stream:File):Int32 ::= :Pointer("fclose(stream:File):Int32");;
fflush(stream:File):Int32 ::= :Pointer("fflush(stream:File):Int32");;
fremove(filename:String):Int32 ::= :Pointer("remove(filename:StrChar):Int32");;
frename(old:String, new:String):Int32 ::= :Pointer("rename(old:StrChar, new:StrChar):Int32");;
ftmpfile():File ::= :Pointer("tmpfile():File");;

fprintf(stream:File, format:FmtChar, ...):Int32 ::= :Pointer("fprintf(stream:File, format:FmtChar, ...):Int32");;
fscanf(stream:File, format:FmtChar, ...):Int32 ::= :Pointer("fscanf(stream:File, format:FmtChar, ...):Int32");;       
fgetc(stream:File):Int32 ::= :Pointer("fgetc(stream:File):Int32");;
fungetc(c:Int32, stream:File):Int32 ::= :Pointer("ungetc(c:Int32, stream:File):Int32");;
fputc(c:Int32, stream:File):Int32 ::= :Pointer("fputc(c:Int32, stream:File):Int32");;
fputs(string:String, stream:File):Int32 ::= :Pointer("fputs(c:StrChar, stream:File):Int32");;

SEEK ::= :Enum(SET=0, CUR=1, END=2);
fseek(stream:File, offset:Int64, whence:Int32):Int32 ::= :Pointer("fseek(stream:File, offset:Int64, whence:Int32):Int32");;

"OK";