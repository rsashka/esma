<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NewLang – Строки</title>
    <link>http://localhost:1313/ru/tags/%D1%81%D1%82%D1%80%D0%BE%D0%BA%D0%B8/</link>
    <description>Recent content in Строки on NewLang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language>
    
	  <atom:link href="http://localhost:1313/ru/tags/%D1%81%D1%82%D1%80%D0%BE%D0%BA%D0%B8/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Символьные строки</title>
      <link>http://localhost:1313/ru/docs/types/strings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/ru/docs/types/strings/</guid>
      <description>
        
        
        &lt;h2 id=&#34;символьные-строки&#34;&gt;Символьные строки&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#%d1%81%d0%b8%d0%bc%d0%b2%d0%be%d0%bb%d1%8c%d0%bd%d1%8b%d0%b5-%d1%81%d1%82%d1%80%d0%be%d0%ba%d0%b8&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;NewLang&lt;/strong&gt; поддерживает два типа строк:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;:StrChar&lt;/em&gt; - универсальные байтовые UTF-8 строки&lt;/li&gt;
&lt;li&gt;&lt;em&gt;:StrWide&lt;/em&gt; - системные символьные (широкие символы)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Единичным элементом универсальной UTF-8 строки является один байт,
тогда как у системных символьных строк единичным элементом строки является широкий символ &lt;em&gt;wchar_t&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;И хотя строки различаются типами единичного элемента строки, но внутреннее представление у обоих типов строк одинаковое.
Все данные символьных строки хранятся в виде универсальной байтовой UTF-8 последовательности.&lt;/p&gt;
&lt;h3 id=&#34;StrChar&#34;&gt;Байтовые строки &lt;em&gt;:StrChar&lt;/em&gt;&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#StrChar&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Единичным элементом универсальной байтовой строки является один байт (точнее &lt;em&gt;:Int8&lt;/em&gt;, т.е. 8-ми битное целое число со знаком).
Количество символов байтовой строки возвращается в байтах и обращение к элементу строки по индексу происходит к байту символьной последовательности.
&lt;em&gt;Так как данные строки интерпретируется как последовательность UTF-8 символов, нужно соблюдать осторожность при изменении отдельных байт!&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;StrWide&#34;&gt;Системные строки &lt;em&gt;:StrWide&lt;/em&gt;&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#StrWide&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Единичным элементом системной строки является широкий символ &lt;em&gt;wchar_t&lt;/em&gt;, а количество элементов системной символьной строки возвращается в широких символах.
Размер типа &lt;em&gt;wchar_t&lt;/em&gt; зависит от операционной системы, поэтому размер одного символа :StrWide в Windows будет 2 байта, а в Linux 4 байта,
что связано с их особенностями реализации.&lt;/p&gt;
&lt;p&gt;Основоне назначение системных строк - упрощение работы в текстовом терминале,
так как один символ всегда соответствует одному знакоместу без необходимости постоянного конвертирования кодовых точек UTF-8.&lt;/p&gt;
&lt;h3 id=&#34;format&#34;&gt;Форматирование строк&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#format&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;К любой переменной можно обратиться как к функции (указав после её имени круглые скобки) для создания копии/клона объекта,
а для строк, такую операцию можно использовать как шаблон при форматировании данных.&lt;/p&gt;
&lt;p&gt;Форматирование строк можно сделать двумая способами:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Задать строку формата с указанием типов выводимых данных (строка формата соотвествует форматированию в стандартной функции &lt;a href=&#34;https://en.wikipedia.org/wiki/Printf&#34;&gt;printf&lt;/a&gt;).
Для применения такого варината форматирования у строки формата необходимо указать соответствующий тип данных
(&lt;em&gt;:FmtChar&lt;/em&gt; или &lt;em&gt;:FmtWide&lt;/em&gt; для обычных и широких символов соответствено).&lt;br&gt;
При таком способе форматирования, именнованные аргументы использовать нельзя,
а компилятор проверяет типы передаваемых значений на соответствие строке формата только &lt;em&gt;во время компиляции&lt;/em&gt; текста программы.&lt;br&gt;
&lt;em&gt;Данный тип форматной строки можно использовать как последний аргумент функции для проверки
типов всех последующих аргументов на соотвестие строки формата.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Во всех остальных случаях в качестве строки формата можно использовать любые строки и именованные аргументы,
а сам формат соотвествует строке формата из библиотеки &lt;a href=&#34;https://fmt.dev/latest/syntax.html&#34;&gt;{fmt}&lt;/a&gt;.&lt;br&gt;
Единствено отличие заключается в возможности указания не только порядкового номера аргумента, но и его имени.&lt;br&gt;
Проверка аргументов на соответствие строки формата производится во время клонирования строки как во время компиляции,
так и во время выполняения программы.&lt;br&gt;
&lt;em&gt;Данный способ форматирования используется по умолчанию для любых типов строк,
но проверка строки формата не выполняется в аргументах функции.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Например:&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fmt&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;FmtChar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Форматирование как в printf&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fmt&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;123&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# &amp;#34;value: 123&amp;#34; - Check compile time only! &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;{name}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;{0}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# fmt::format equivalent &amp;#34;{1} {0}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;template&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;шаблон&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Строка&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# result = &amp;#34;Строка шаблон&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
